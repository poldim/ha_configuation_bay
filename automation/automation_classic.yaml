- alias: Announce package delivery
  trigger:
    platform: state
    entity_id: sensor.deliveries_today
  condition:
  - condition: template
    value_template: '{{trigger.to_state.state|int > trigger.from_state.state|int}}'
  - condition: state
    entity_id: group.all_devices
    state: home
  action:
  - service: tts.google_say
    data:
      entity_id: media_player.home_group
      message: 'Package delivered'
  - service: notify.TEXT_DK
    data:
      message: 'Package delivered'


- alias: Update Available Notifications
  initial_state: true
  hide_entity: true
  trigger:
    - platform: state
      entity_id: updater.updater
  action:
    - service: notify.ios_dksphone
      data:
        title: "Version control"
        message: 'Update for Home Assistant is available.'
    - service: notify.TEXT_DK
      data:
        message: 'Update for Home Assistant is available'

- alias: Notify iOS Garage
  initial_state: true
  hide_entity: true
  trigger:
    - platform: state
      entity_id: cover.garage_door
      from: 'closed'
      to: 'open'
  # condition:
  # - condition: template
  #   value_template: '{{ (as_timestamp(now()) - as_timestamp(states.sensor.garage_door_control.last_changed)) > 10 }}'
          #   - condition: template
          #     value_template: '{{ as_timestamp(now()) - as_timestamp(states(switch.sensor.garage_door_control.last_updated)) < 10 }}'
  action:
    - service: notify.ios_dksphone
      data:
        title: "Garage Alert"
        message: "GARAGE IS OPEN"
        data:
          push:
            badge: 0
            category: 'garage1'


- alias: iOS Actionable Notification for Garage Door
  trigger:
    platform: event
    event_type: ios.notification_action_fired
    event_data:
      actionName: CLOSE_GARAGE
  action:
    - service: cover.close_cover
      entity_id: cover.garage_door

#
# #If the garage has been open for at least 15 minutes, send a notification when it is finally closed
#   - alias: Notify when garage door is closed after an alert
#     trigger:
#       platform: state
#       entity_id: binary_sensor.garage_door_open_for_15mins
#       from: 'on'
#       to: 'off'
#     action:
#     - service: notify.telegramBotGroup
#       data:
#         message: '{{now().strftime("%H:%M:%S %Y-%m-%d")}}: Garage has been closed.'
#
# #Turn the alert off when a telegram message of /ackGarage is received.
#   - alias: 'Telegram bot to ack the garageDoor being open'
#     hide_entity: true
#     trigger:
#       platform: event
#       event_type: telegram_command
#       event_data:
#         command: '/ackGarage'
#     action:
#     - service: alert.turn_off
#       entity_id: alert.garage_door
















  # - alias: Notify iOS WEMO TEST
  #   initial_state: true
  #   hide_entity: true
  #   trigger:
  #     - platform: state
  #       entity_id: switch.light_candle_in_living_room
  #       from: 'off'
  #       to: 'on'
  #   condition:
  #   - condition: template
  #     value_template: >
  #       {{ (as_timestamp(now()) - as_timestamp(states.switch.light_candle_in_living_room.last_changed)) > 10 }}
  #   action:
  #   - service: notify.ios_dksphone
  #   # - service: notify.both_phones
  #     data:
  #       title: "Switch Alert Test"
  #       message: "SWITCH IS ON - TESTY TEST"
  #       data:
  #         push:
  #           badge: 0
  #           # sound: <SOUND FILE HERE>
  #           category: 'wemo1' # Needs to match the top level identifier you used in the ios configuration
  #
  #
  # - alias: iOS Actionable Notification for WEMO TEST
  #   initial_state: true
  #   hide_entity: true
  #   trigger:
  #     platform: event
  #     event_type: ios.notification_action_fired
  #     event_data:
  #       actionName: WEMO1_ON
  #   action:
  #     - service: switch.turn_off
  #       entity_id: switch.light_candle_in_living_room
