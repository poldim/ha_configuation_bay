- platform: time_date
  display_options:
    - 'date_time'

- platform: ups
  name: 'UPS'
  username: !secret ups_user
  password: !secret ups_password

- platform: fedex
  name: 'Fedex'
  username: !secret fedexdeliverymanager_username
  password: !secret fedexdeliverymanager_password

# - platform: ohmconnect
#   name: 'Ohm Hour'
#   # name: OhmConnect Status
#   id: !secret ohm_id

# - platform: modbus
#   registers:
#     - name: PG&E, Phase A
#       unit_of_measurement: A
#       slave: 1
#       register: 1099
#       scale: 0.1
#       precision: 1
#
# - platform: modbus
#   registers:
#     - name: PG&E, Phase B
#       unit_of_measurement: A
#       slave: 1
#       register: 1100
#       scale: 0.1
#       precision: 1

- platform: speedtest
  hour:
    - 9
    - 12
    - 20
  monitored_conditions:
    - ping
    - download
    - upload


- platform: mqtt
  state_topic: "homeassistant/garage/door/relay"
  name: "Garage Door Relay"
  # force_update: True

- platform: mqtt
  state_topic: "homeassistant/garage/door/status"
  name: "Garage Door Status"
  # force_update: True


# - platform: mqtt
#   name: "ESP TEST"
#   state_topic: "30/rotary"
#   qos: 0
#   unit_of_measurement: "Rotary"

- platform: darksky
  api_key: !secret darksky_api_key
  monitored_conditions:
    - summary
    # - icon
    # - nearest_storm_distance
    # - nearest_storm_bearing
    # - precip_type
    # - precip_intensity
    # - precip_probability
    - temperature
    # - apparent_temperature
    # - dew_point
    # - wind_speed
    # - wind_bearing
    # - cloud_cover
    # - humidity
    # - pressure
    # - visibility
    # - ozone
    # - minutely_summary
    - hourly_summary
    - daily_summary
    - temperature_max
    - temperature_min
    # - apparent_temperature_max
    # - apparent_temperature_min
    # - precip_intensity_max

- platform: template
  sensors:


    template_front_door:
        value_template: >-
          {%- if is_state("sensor.doorfront_burglar", "3") -%}
            Tampered
          {%- elif is_state("sensor.doorfront_burglar", "0") -%}
            {%- if is_state("sensor.doorfront_access_control", "22") -%}
              Open
            {%- endif %}
            {%- if is_state("sensor.doorfront_access_control", "23") -%}
              Closed
            {%- endif %}
          {%- endif %}
        friendly_name: 'Front Door'
#
    template_garage_door:
        value_template: >-
          {%- if is_state('sensor.garage_door_status', 'CLOSED') -%}
            Closed
          {%- elif is_state('sensor.garage_door_status', 'OPEN') -%}
            Open
          {%- else -%}
            <--- ERROR --->
          {%- endif %}
        icon_template: >-
          {%- if is_state("sensor.garage_door_status", "CLOSED") -%}
            mdi:garage
          {%- else -%}
            mdi:garage-open
          {%- endif %}
        friendly_name: 'Garage Door'
#
    template_lightwell_door:
        value_template: >-
          {%- if is_state("sensor.doorlightwell_access_control", "23") -%}
            Closed
          {%- else -%}
            Open
          {%- endif %}
        friendly_name: 'Lightwell Door'



      # 88888888ba         db    888888888888  888888888888  88888888888  88888888ba   88  88888888888  ad88888ba
      # 88      "8b       d88b        88            88       88           88      "8b  88  88          d8"     "8b
      # 88      ,8P      d8'`8b       88            88       88           88      ,8P  88  88          Y8,
      # 88aaaaaa8P'     d8'  `8b      88            88       88aaaaa      88aaaaaa8P'  88  88aaaaa     `Y8aaaaa,
      # 88""""""8b,    d8YaaaaY8b     88            88       88"""""      88""""88'    88  88"""""       `"""""8b,
      # 88      `8b   d8""""""""8b    88            88       88           88    `8b    88  88                  `8b
      # 88      a8P  d8'        `8b   88            88       88           88     `8b   88  88          Y8a     a8P
      # 88888888P"  d8'          `8b  88            88       88888888888  88      `8b  88  88888888888  "Y88888P"



    zwave_battery_door_front:
      value_template: '{{ states.zwave.doorfront.attributes.battery_level|default(0) }}'
      icon_template: >
        {% set battery_level = states.zwave.doorfront.attributes.battery_level | default(0) | int %}
        {% set battery_round = (battery_level / 10) |int * 10 %}
        {% if battery_round >= 100 %}
          mdi:battery
        {% elif battery_round > 0 %}
          mdi:battery-{{ battery_round }}
        {% else %}
          mdi:battery-alert
        {% endif %}
      friendly_name: Front Door


    zwave_battery_door_lightwell:
      value_template: '{{ states.zwave.doorlightwell.attributes.battery_level|default(0) }}'
      icon_template: >
        {% set battery_level = states.zwave.doorlightwell.attributes.battery_level | default(0) | int %}
        {% set battery_round = (battery_level / 10) |int * 10 %}
        {% if battery_round >= 100 %}
          mdi:battery
        {% elif battery_round > 0 %}
          mdi:battery-{{ battery_round }}
        {% else %}
          mdi:battery-alert
        {% endif %}
      friendly_name: Lightwell Door



# PACKAGE TRACKING
    packages_in_transit:
      friendly_name: "Packages in Transit"
      value_template: >
        {% macro in_transit(sensor) %}
          {{sensor.state|int - delivered(sensor)|int}}
        {% endmacro %}
        {% macro delivered(sensor) %}
          {% if 'delivered' in sensor.attributes %}
            {{sensor.attributes.delivered}}
          {% else %}
             0
          {% endif %}
        {% endmacro %}
        {{in_transit(states.sensor.usps_packages)|int + in_transit(states.sensor.ups)|int + in_transit(states.sensor.fedex)|int}}
    deliveries_today:
      friendly_name: "Today's Deliveries"
      value_template: >
        {% macro delivered(sensor) %}
          {% if 'delivered' in sensor.attributes %}
            {{sensor.attributes.delivered}}
          {% else %}
             0
          {% endif %}
        {% endmacro %}
        {{delivered(states.sensor.usps_packages)|int + delivered(states.sensor.ups)|int + delivered(states.sensor.fedex)|int}}


# WASHING MACHINE
    washer_status:
      friendly_name: "Washing Machine Status"
      value_template:  "{{states.input_select.washer_status.state}}"
    # washer_power:
    #   friendly_name: "Washing Machine Power OLD"
    #   unit_of_measurement: "w"
    #   value_template: '{% if states.switch.washer %}{{ states.switch.washer.attributes.current_power_w }}{% else %}Off{% endif %}'

# # HOMELAB POWER ???
#     homelab_power:
#       friendly_name: "HomeLAB Power OLD"
#       unit_of_measurement: "w"
#       value_template: '{% if states.switch.homelab %}{{ states.switch.homelab.attributes.current_power_w }}{% else %}Off{% endif %}'

# Curtain alarm clock
    alarm_time:
      friendly_name: 'Time'
      value_template: '{{ "%0.02d:%0.02d" | format(states("input_number.alarmhour") | int, states("input_number.alarmminutes") | int) }}'

    dark_sky_template:
      value_template: "{{ states('sensor.dark_sky_summary') }}"
      icon_template: >
        {% if is_state('sensor.dark_sky_icon', 'clear-day') %}
          mdi:weather-sunny
        {% elif is_state('sensor.dark_sky_icon', 'clear-night') %}
          mdi:weather-night
        {% elif is_state('sensor.dark_sky_icon', 'rain') %}
          mdi:weather-rainy
        {% elif is_state('sensor.dark_sky_icon', 'snow') %}
          mdi:weather-snowy
        {% elif is_state('sensor.dark_sky_icon', 'sleet') %}
          mdi:weather-snowy-rainy
        {% elif is_state('sensor.dark_sky_icon', 'wind') %}
          mdi:weather-windy-variant
        {% elif is_state('sensor.dark_sky_icon', 'fog') %}
          mdi:weather-fog
        {% elif is_state('sensor.dark_sky_icon', 'cloudy') %}
          mdi:weather-cloudy
        {% elif is_state('sensor.dark_sky_icon', 'partly-cloudy-day') or is_state('sensor.dark_sky_icon', 'partly-cloudy-night') %}
          mdi:weather-partlycloudy
        {% elif is_state('sensor.dark_sky_icon', 'hail') %}
          mdi:weather-hail
        {% elif is_state('sensor.dark_sky_icon', 'thunderstorm') %}
          mdi:weather-lightning
        {% else %}
          mdi:help-circle
        {% endif %}



- platform: mqtt
  state_topic: "homeassistant/garage/door/status"
  name: "Garage Door Status"
  payload_on: "OPEN"
  payload_off: "CLOSED"
- platform: mqtt
  state_topic: "homeassistant/garage/door/control"
  name: "Garage Door Control"
  payload_on: "OPEN"
  payload_off: "CLOSED"



- platform: mqtt
  name: 'MQTT Washer Energy Yesterday'
  state_topic: "homeassistant/outlets/washer/SENSOR"
  value_template: "{{ value_json.ENERGY.Yesterday }}"
  unit_of_measurement: "kWh"
- platform: mqtt
  name: "MQTT Washer Energy Today"
  state_topic: "homeassistant/outlets/washer/SENSOR"
  value_template: "{{ value_json.ENERGY.Today }}"
  unit_of_measurement: "kWh"
- platform: mqtt
  name: "MQTT Washer Energy Total"
  state_topic: "homeassistant/outlets/washer/SENSOR"
  value_template: "{{ value_json.ENERGY.Total }}"
  unit_of_measurement: "kWh"
- platform: mqtt
  name: "MQTT Washer Power"
  state_topic: "homeassistant/outlets/washer/SENSOR"
  value_template: "{{ value_json.ENERGY.Power }}"
  unit_of_measurement: "W"
- platform: mqtt
  name: "MQTT Washer Voltage"
  state_topic: "homeassistant/outlets/washer/SENSOR"
  value_template: "{{ value_json.ENERGY.Voltage }}"
  unit_of_measurement: "V"
- platform: mqtt
  name: "MQTT Washer Current"
  state_topic: "homeassistant/outlets/washer/SENSOR"
  value_template: "{{ value_json.ENERGY.Current }}"
  unit_of_measurement: "A"
- platform: mqtt
  name: "MQTT Washer Power Factor"
  state_topic: "homeassistant/outlets/washer/SENSOR"
  value_template: "{{ value_json.Factor }}"

- platform: mqtt
  name: "MQTT HomeLab Energy Yesterday"
  state_topic: "homeassistant/outlets/homelab/SENSOR"
  value_template: "{{ value_json.ENERGY.Yesterday }}"
  unit_of_measurement: "kWh"
- platform: mqtt
  name: "MQTT HomeLab Energy Today"
  state_topic: "homeassistant/outlets/homelab/SENSOR"
  value_template: "{{ value_json.ENERGY.Today }}"
  unit_of_measurement: "kWh"
- platform: mqtt
  name: "MQTT HomeLab Energy Total"
  state_topic: "homeassistant/outlets/homelab/SENSOR"
  value_template: "{{ value_json.ENERGY.Total }}"
  unit_of_measurement: "kWh"
- platform: mqtt
  name: "MQTT HomeLab Power"
  state_topic: "homeassistant/outlets/homelab/SENSOR"
  value_template: "{{ value_json.ENERGY.Power }}"
  unit_of_measurement: "W"
- platform: mqtt
  name: "MQTT HomeLab Voltage"
  state_topic: "homeassistant/outlets/homelab/SENSOR"
  value_template: "{{ value_json.ENERGY.Voltage }}"
  unit_of_measurement: "V"
- platform: mqtt
  name: "MQTT HomeLab Current"
  state_topic: "homeassistant/outlets/homelab/SENSOR"
  value_template: "{{ value_json.ENERGY.Current }}"
  unit_of_measurement: "A"
- platform: mqtt
  name: "MQTT HomeLab Power Factor"
  state_topic: "homeassistant/outlets/homelab/SENSOR"
  value_template: "{{ value_json.Factor }}"








# - platform: systemmonitor
#   resources:
#     - type: disk_free
#       arg: /home
#     - type: memory_free
#     - type: processor_use
#     - type: last_boot
