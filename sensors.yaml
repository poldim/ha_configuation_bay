- platform: time_date
  display_options:
    - 'date_time'

- platform: ups
  name: 'UPS'
  username: !secret ups_user
  password: !secret ups_password

- platform: fedex
  name: 'Fedex'
  username: !secret fedexdeliverymanager_username
  password: !secret fedexdeliverymanager_password

- platform: ohmconnect
  name: 'Ohm Hour'
  # name: OhmConnect Status
  id: !secret ohm_id

# - platform: modbus
#   registers:
#     - name: PG&E, Phase A
#       unit_of_measurement: A
#       slave: 1
#       register: 1099
#       scale: 0.1
#       precision: 1
#
# - platform: modbus
#   registers:
#     - name: PG&E, Phase B
#       unit_of_measurement: A
#       slave: 1
#       register: 1100
#       scale: 0.1
#       precision: 1

- platform: speedtest
  hour:
    - 9
    - 12
    - 20
  monitored_conditions:
    - ping
    - download
    - upload

# - platform: mqtt
#   name: "ESP TEST"
#   state_topic: "30/rotary"
#   qos: 0
#   unit_of_measurement: "Rotary"

- platform: darksky
  api_key: !secret darksky_api_key
  monitored_conditions:
    - summary
    # - icon
    # - nearest_storm_distance
    # - nearest_storm_bearing
    # - precip_type
    # - precip_intensity
    # - precip_probability
    - temperature
    # - apparent_temperature
    # - dew_point
    # - wind_speed
    # - wind_bearing
    # - cloud_cover
    # - humidity
    # - pressure
    # - visibility
    # - ozone
    # - minutely_summary
    - hourly_summary
    - daily_summary
    - temperature_max
    - temperature_min
    # - apparent_temperature_max
    # - apparent_temperature_min
    # - precip_intensity_max

- platform: template
  sensors:
    template_front_deadbolt_status:
        value_template: >-
          {%- if is_state("sensor.front_door_deadbolt_alarm_type", "19") -%}
            {%- if is_state("sensor.front_door_deadbolt_alarm_level", "0") -%}
              Unlocked by Master Code
            {%- elif is_state("sensor.front_door_deadbolt_alarm_level", "1") -%}
              Unlocked by User One
            {%- elif is_state("sensor.front_door_deadbolt_alarm_level", "2") -%}
              Unlocked by User Two
            {%- elif is_state("sensor.front_door_deadbolt_alarm_level", "3") -%}
              Unlocked by User Three
            {%- else -%}
              Unlocked by User {{ sensor.front_door_deadbolt_alarm_level }}
            {%- endif %}
          {%- elif is_state("sensor.front_door_deadbolt_alarm_type", "27") %}
            Auto-Relocked
          {%- elif is_state("sensor.front_door_deadbolt_alarm_type", "21") %}
            Manually Locked
          {%- elif is_state("sensor.front_door_deadbolt_alarm_type", "22") %}
            Manually Unlocked
          {%- elif is_state("sensor.front_door_deadbolt_alarm_type", "25") %}
            From HA GUI
          {%- elif is_state("sensor.front_door_deadbolt_alarm_type", "161") %}
            Tampered!
          {%- else -%}
            Unknown Level {{ states.sensor.front_door_deadbolt_alarm_level.state }} Type {{ states.sensor.front_door_deadbolt_alarm_type.state }}
          {%- endif %}
        icon_template: >-
          {%- if is_state("sensor.front_door_deadbolt_alarm_type", "19") -%}
            mdi:lock-open-outline
          {%- elif is_state("sensor.front_door_deadbolt_alarm_type", "27") %}
            mdi:lock-outline
          {%- elif is_state("sensor.front_door_deadbolt_alarm_type", "21") %}
            mdi:lock-outline
          {%- elif is_state("sensor.front_door_deadbolt_alarm_type", "22") %}
            mdi:lock-open-outline
          {%- elif is_state("sensor.front_door_deadbolt_alarm_type", "161") %}
            mdi:alert
          {%- else -%}
            mdi:lock-open
          {%- endif %}
        friendly_name: 'Front Deadbolt Status'
    sensors:
      front_door_deadbolt_status:
        entity_id: lock.front_door_deadbolt_locked
        value_template: >-
          {% set lock_status = states.lock.front_door_deadbolt_locked.attributes.lock_status %}
          {% set lock_status = lock_status|replace('user 0', 'Master') %}
          {% set lock_status = lock_status|replace('user 1', 'Dmitriy') %}
          {% set lock_status = lock_status|replace('user 2', 'Nidhi') %}
          {% set lock_status = lock_status|replace('user 3', 'Housekeeper') %}
          {% set lock_status = lock_status|replace('user 4', 'Dog Walker') %}
          {% set lock_status = lock_status|replace('user 5', 'Emergency') %}
          {{ lock_status }}
        friendly_name: 'Last unlocked by'
    template_front_door:
        value_template: >-
          {%- if is_state("sensor.door01_alarm_level", "255") -%}
              {%- if is_state("sensor.door01_alarm_level", "3") -%}
                Tampered
              {%- else -%}
                Open
              {%- endif %}
          {%- else -%}
            Closed
          {%- endif %}
        friendly_name: 'Front Door'
    template_garage_door:
        value_template: >-
          {%- if is_state("sensor.door.garage", "255") -%}
              {%- if is_state("sensor.door.garage", "3") -%}
                Tampered
              {%- else -%}
                Open
              {%- endif %}
          {%- else -%}
            Closed
          {%- endif %}
        friendly_name: 'Garage Door'
    template_lightwell_door:
        value_template: >-
          {%- if is_state("sensor.door.lightwell", "23") -%}
                Closed
          {%- else -%}
            Open
          {%- endif %}
        friendly_name: 'Lightwell Door'


# PACKAGE TRACKING
    packages_in_transit:
      friendly_name: "Packages in Transit"
      value_template: >
        {% macro in_transit(sensor) %}
          {{sensor.state|int - delivered(sensor)|int}}
        {% endmacro %}
        {% macro delivered(sensor) %}
          {% if 'delivered' in sensor.attributes %}
            {{sensor.attributes.delivered}}
          {% else %}
             0
          {% endif %}
        {% endmacro %}
        {{in_transit(states.sensor.usps_packages)|int + in_transit(states.sensor.ups)|int + in_transit(states.sensor.fedex)|int}}
    deliveries_today:
      friendly_name: "Today's Deliveries"
      value_template: >
        {% macro delivered(sensor) %}
          {% if 'delivered' in sensor.attributes %}
            {{sensor.attributes.delivered}}
          {% else %}
             0
          {% endif %}
        {% endmacro %}
        {{delivered(states.sensor.usps_packages)|int + delivered(states.sensor.ups)|int + delivered(states.sensor.fedex)|int}}


# WASHING MACHINE
    washer_status:
      friendly_name: "Washing Machine Status"
      value_template:  "{{states.input_select.washer_status.state}}"
    washer_power:
      friendly_name: "Washing Machine Power"
      unit_of_measurement: "w"
      value_template: '{% if states.switch.washer %}{{ states.switch.washer.attributes.current_power_w }}{% else %}Off{% endif %}'

# homelab
    homelab_power:
      friendly_name: "HomeLAB Power"
      unit_of_measurement: "w"
      value_template: '{% if states.switch.homelab %}{{ states.switch.homelab.attributes.current_power_w }}{% else %}Off{% endif %}'





- platform: mqtt
  state_topic: "garage/button"
  name: "Garage Door Button"
  payload_on: "OPEN"
  payload_off: "CLOSED"
- platform: mqtt
  state_topic: "garage/door"
  name: "Garage Door Button"
  payload_on: "OPEN"
  payload_off: "CLOSED"



# #sensor 2
# - platform: time_date
#   display_options:
#     - "date_time"
# #sensor 3
# - platform: mqtt
#   state_topic: "bruh/lr/pir"
#   name: "LR Motion"
# #  payload_on: "motion detected"
# #  payload_off: "standby"
# #sensor 4
# - platform: mqtt
#   state_topic: "bruh/lr/temperature"
#   name: "LR Temperature"
#   unit_of_measurement: "F"
#   value_template: "{{  value | round(1) }}"
# #sensor 5
# - platform: mqtt
#   state_topic: "bruh/lr/humidity"
#   name: "LR Humidity"
#   unit_of_measurement: "%"
#   value_template: "{{  value | round(1) }}"
# #sensor 6
# - platform: mqtt
#   state_topic: "bruh/lr/ldr"
#   unit_of_measurement: "luxv"
#   name: "LR Light"
#   value_template: "{{  value | round(0) }}"
# #sensor 7:
# - platform: mqtt
#   state_topic: "owntracks/ben6p/ben6p"
#   name: "Ben Nexus 6P Battery"
#   unit_of_measurement: "%"
#   value_template: "{{ value_json.batt }}"
# #sensor 8
# - platform: mqtt
#   state_topic: "owntracks/cailin6p/cailin6p"
#   name: "Cailin Nexus 6P Battery"
#   unit_of_measurement: "%"
#   value_template: "{{ value_json.batt }}"
# #sensor 9
# - platform: systemmonitor
#   resources:
#     - type: disk_free
#       arg: /home
#     - type: memory_free
#     - type: processor_use
#     - type: last_boot
# #sensor 10
# - platform: mqtt
#   state_topic: "bruh/node1/pir"
#   name: "BR Motion"
# #  payload_on: "motion detected"
# #  payload_off: "standby"
# #sensor 11
# - platform: mqtt
#   state_topic: "bruh/node1/temperature"
#   name: "BR Temperature"
#   unit_of_measurement: "F"
#   value_template: "{{  value | round(1) }}"
# #sensor 12
# - platform: mqtt
#   state_topic: "bruh/node1/humidity"
#   name: "BR Humidity"
#   unit_of_measurement: "%"
#   value_template: "{{  value | round(1) }}"
# #sensor 13
# - platform: mqtt
#   state_topic: "bruh/node1/ldr"
#   unit_of_measurement: "lux"
#   name: "BR Light"
#   value_template: "{{  value | round(0) }}"
# #sensor 14
# - platform: mqtt
#   state_topic: "bruh/node1/sound"
#   unit_of_measurement: "dB"
#   name: "BR Last Sound"
#   value_template: "{{  value | round(0) }}"
# #sensor 15
# - platform: mqtt
#   state_topic: "bruh/node1/soundclap"
#   name: "BR Clap Sound"
# #sensor 16
# - platform: mqtt
#   state_topic: "bruh/partybutt/buttstatus"
#   name: "Party Button"
# #sensor 17
# - platform: speedtest
#   monitored_conditions:
#     - ping
#     - download
#     - upload
# #sensor 18
# - platform: torque
#   name: prius
#   email: !secret email_address
# #sensor 19
# - platform: mqtt
#   state_topic: "bruh/node3/temperature"
#   name: "BtR Temperature"
#   unit_of_measurement: "F"
#   value_template: "{{  value | round(1) }}"
# #sensor 20
# - platform: mqtt
#   state_topic: "bruh/node3/humidity"
#   name: "BtR Humidity"
#   unit_of_measurement: "%"
#   value_template: "{{  value | round(1) }}"
# #sensor 21
# - platform: mqtt
#   state_topic: "bruh/node3/ldr"
#   unit_of_measurement: "lux"
#   name: "BtR Light"
#   value_template: "{{  value | round(0) }}"
# #sensor 22
# - platform: mqtt
#   state_topic: "bruh/node3/pir"
#   name: "BtR Motion"
# ##sensor 23
# - platform: google_travel_time
#   api_key: !secret google_time_travel_api_key
#   origin: !secret home_address
#   destination: !secret work_address
# ##sensor 24
# - platform: template
#   sensors:
#     gocontrol_door_1:
#       value_template: "{%if states.sensor.gocontrol_door_sensor_1_alarm_level_7.state == '255' %}open{% elif states.sensor.gocontrol_door_sensor_1_alarm_level_7.state == '0' %}closed{% endif %}"
#       friendly_name: "Back Door Sensor"
#     gocontrol_door_2:
#       value_template: "{%if states.sensor.gocontrol_door_sensor_2_alarm_level_8.state == '255' %}open{% elif states.sensor.gocontrol_door_sensor_2_alarm_level_8.state == '0' %}closed{% endif %}"
#       friendly_name: "Front Door Sensor"
#     gocontrol_motion:
#       value_template: "{%if states.sensor.gocontrol_pir_1_alarm_level_6.state == '255' %}motion detected{% elif states.sensor.gocontrol_pir_1_alarm_level_6.state == '0' %}standby{% endif %}"
#       friendly_name: "GoControl Motion"
#     aeotec_multisensor_motion:
#       value_template: "{%if states.sensor.aeotec_multisensor_6_burglar_3.state == '8' %}motion detected{% elif states.sensor.aeotec_multisensor_6_burglar_3.state == '3' %}tamper{% elif states.sensor.aeotec_multisensor_6_burglar_3.state == '0' %}standby{% endif %}"
#       friendly_name: "Aeotec Motion"
#     fibaro_multisensor_motion:
#       value_template: "{%if states.sensor.fibaro_multisensor_burglar_4.state == '8' %}motion detected{% elif states.sensor.fibaro_multisensor_burglar_4.state == '3' %}tamper{% elif states.sensor.fibaro_multisensor_burglar_4.state == '0' %}standby{% endif %}"
#       friendly_name: "Fibaro Motion"
